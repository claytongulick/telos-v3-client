"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_ionic_core_dist_esm_ion-img_entry_js"],{

/***/ "../../../node_modules/@ionic/core/dist/esm/ion-img.entry.js":
/*!*******************************************************************!*\
  !*** ../../../node_modules/@ionic/core/dist/esm/ion-img.entry.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_img": () => (/* binding */ Img)
/* harmony export */ });
/* harmony import */ var _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-06cd27b1.js */ "../../../node_modules/@ionic/core/dist/esm/index-06cd27b1.js");
/* harmony import */ var _ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ionic-global-a049bcbf.js */ "../../../node_modules/@ionic/core/dist/esm/ionic-global-a049bcbf.js");
/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */



const imgCss = ":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}";

let Img = class {
  constructor(hostRef) {
    (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.ionImgWillLoad = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionImgWillLoad", 7);
    this.ionImgDidLoad = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionImgDidLoad", 7);
    this.ionError = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionError", 7);
    this.onLoad = () => {
      this.ionImgDidLoad.emit();
    };
    this.onError = () => {
      this.ionError.emit();
    };
  }
  srcChanged() {
    this.addIO();
  }
  componentDidLoad() {
    this.addIO();
  }
  addIO() {
    if (this.src === undefined) {
      return;
    }
    if (typeof window !== 'undefined' &&
      'IntersectionObserver' in window &&
      'IntersectionObserverEntry' in window &&
      'isIntersecting' in window.IntersectionObserverEntry.prototype) {
      this.removeIO();
      this.io = new IntersectionObserver(data => {
        /**
         * On slower devices, it is possible for an intersection observer entry to contain multiple
         * objects in the array. This happens when quickly scrolling an image into view and then out of
         * view. In this case, the last object represents the current state of the component.
         */
        if (data[data.length - 1].isIntersecting) {
          this.load();
          this.removeIO();
        }
      });
      this.io.observe(this.el);
    }
    else {
      // fall back to setTimeout for Safari and IE
      setTimeout(() => this.load(), 200);
    }
  }
  load() {
    this.loadError = this.onError;
    this.loadSrc = this.src;
    this.ionImgWillLoad.emit();
  }
  removeIO() {
    if (this.io) {
      this.io.disconnect();
      this.io = undefined;
    }
  }
  render() {
    return ((0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_1__.b)(this) }, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("img", { decoding: "async", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: "image" })));
  }
  get el() { return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.i)(this); }
  static get watchers() { return {
    "src": ["srcChanged"]
  }; }
};
Img.style = imgCss;




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmtzL25vZGVfbW9kdWxlc19pb25pY19jb3JlX2Rpc3RfZXNtX2lvbi1pbWdfZW50cnlfanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQzZHO0FBQ2hEOztBQUU3RCxzQkFBc0IsY0FBYyxzQkFBc0IsbUJBQW1CLElBQUksY0FBYyxXQUFXLFlBQVksc0JBQXNCLG1CQUFtQiwyQkFBMkIsd0JBQXdCOztBQUVsTjtBQUNBO0FBQ0EsSUFBSSxxREFBZ0I7QUFDcEIsMEJBQTBCLHFEQUFXO0FBQ3JDLHlCQUF5QixxREFBVztBQUNwQyxvQkFBb0IscURBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscURBQUMsQ0FBQyxpREFBSSxJQUFJLE9BQU8sNERBQVUsUUFBUSxFQUFFLHFEQUFDLFVBQVUsa0hBQWtIO0FBQzlLO0FBQ0EsYUFBYSxPQUFPLHFEQUFVO0FBQzlCLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0Bpb25pYy9jb3JlL2Rpc3QvZXNtL2lvbi1pbWcuZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiAoQykgSW9uaWMgaHR0cDovL2lvbmljZnJhbWV3b3JrLmNvbSAtIE1JVCBMaWNlbnNlXG4gKi9cbmltcG9ydCB7IHIgYXMgcmVnaXN0ZXJJbnN0YW5jZSwgZSBhcyBjcmVhdGVFdmVudCwgaCwgSCBhcyBIb3N0LCBpIGFzIGdldEVsZW1lbnQgfSBmcm9tICcuL2luZGV4LTA2Y2QyN2IxLmpzJztcbmltcG9ydCB7IGIgYXMgZ2V0SW9uTW9kZSB9IGZyb20gJy4vaW9uaWMtZ2xvYmFsLWEwNDliY2JmLmpzJztcblxuY29uc3QgaW1nQ3NzID0gXCI6aG9zdHtkaXNwbGF5OmJsb2NrOy1vLW9iamVjdC1maXQ6Y29udGFpbjtvYmplY3QtZml0OmNvbnRhaW59aW1ne2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTstby1vYmplY3QtZml0OmluaGVyaXQ7b2JqZWN0LWZpdDppbmhlcml0Oy1vLW9iamVjdC1wb3NpdGlvbjppbmhlcml0O29iamVjdC1wb3NpdGlvbjppbmhlcml0fVwiO1xuXG5sZXQgSW1nID0gY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XG4gICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzLCBob3N0UmVmKTtcbiAgICB0aGlzLmlvbkltZ1dpbGxMb2FkID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25JbWdXaWxsTG9hZFwiLCA3KTtcbiAgICB0aGlzLmlvbkltZ0RpZExvYWQgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkltZ0RpZExvYWRcIiwgNyk7XG4gICAgdGhpcy5pb25FcnJvciA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uRXJyb3JcIiwgNyk7XG4gICAgdGhpcy5vbkxvYWQgPSAoKSA9PiB7XG4gICAgICB0aGlzLmlvbkltZ0RpZExvYWQuZW1pdCgpO1xuICAgIH07XG4gICAgdGhpcy5vbkVycm9yID0gKCkgPT4ge1xuICAgICAgdGhpcy5pb25FcnJvci5lbWl0KCk7XG4gICAgfTtcbiAgfVxuICBzcmNDaGFuZ2VkKCkge1xuICAgIHRoaXMuYWRkSU8oKTtcbiAgfVxuICBjb21wb25lbnREaWRMb2FkKCkge1xuICAgIHRoaXMuYWRkSU8oKTtcbiAgfVxuICBhZGRJTygpIHtcbiAgICBpZiAodGhpcy5zcmMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICdJbnRlcnNlY3Rpb25PYnNlcnZlcicgaW4gd2luZG93ICYmXG4gICAgICAnSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeScgaW4gd2luZG93ICYmXG4gICAgICAnaXNJbnRlcnNlY3RpbmcnIGluIHdpbmRvdy5JbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5LnByb3RvdHlwZSkge1xuICAgICAgdGhpcy5yZW1vdmVJTygpO1xuICAgICAgdGhpcy5pbyA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihkYXRhID0+IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIE9uIHNsb3dlciBkZXZpY2VzLCBpdCBpcyBwb3NzaWJsZSBmb3IgYW4gaW50ZXJzZWN0aW9uIG9ic2VydmVyIGVudHJ5IHRvIGNvbnRhaW4gbXVsdGlwbGVcbiAgICAgICAgICogb2JqZWN0cyBpbiB0aGUgYXJyYXkuIFRoaXMgaGFwcGVucyB3aGVuIHF1aWNrbHkgc2Nyb2xsaW5nIGFuIGltYWdlIGludG8gdmlldyBhbmQgdGhlbiBvdXQgb2ZcbiAgICAgICAgICogdmlldy4gSW4gdGhpcyBjYXNlLCB0aGUgbGFzdCBvYmplY3QgcmVwcmVzZW50cyB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgY29tcG9uZW50LlxuICAgICAgICAgKi9cbiAgICAgICAgaWYgKGRhdGFbZGF0YS5sZW5ndGggLSAxXS5pc0ludGVyc2VjdGluZykge1xuICAgICAgICAgIHRoaXMubG9hZCgpO1xuICAgICAgICAgIHRoaXMucmVtb3ZlSU8oKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLmlvLm9ic2VydmUodGhpcy5lbCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgLy8gZmFsbCBiYWNrIHRvIHNldFRpbWVvdXQgZm9yIFNhZmFyaSBhbmQgSUVcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5sb2FkKCksIDIwMCk7XG4gICAgfVxuICB9XG4gIGxvYWQoKSB7XG4gICAgdGhpcy5sb2FkRXJyb3IgPSB0aGlzLm9uRXJyb3I7XG4gICAgdGhpcy5sb2FkU3JjID0gdGhpcy5zcmM7XG4gICAgdGhpcy5pb25JbWdXaWxsTG9hZC5lbWl0KCk7XG4gIH1cbiAgcmVtb3ZlSU8oKSB7XG4gICAgaWYgKHRoaXMuaW8pIHtcbiAgICAgIHRoaXMuaW8uZGlzY29ubmVjdCgpO1xuICAgICAgdGhpcy5pbyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoaChIb3N0LCB7IGNsYXNzOiBnZXRJb25Nb2RlKHRoaXMpIH0sIGgoXCJpbWdcIiwgeyBkZWNvZGluZzogXCJhc3luY1wiLCBzcmM6IHRoaXMubG9hZFNyYywgYWx0OiB0aGlzLmFsdCwgb25Mb2FkOiB0aGlzLm9uTG9hZCwgb25FcnJvcjogdGhpcy5sb2FkRXJyb3IsIHBhcnQ6IFwiaW1hZ2VcIiB9KSkpO1xuICB9XG4gIGdldCBlbCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbiAgc3RhdGljIGdldCB3YXRjaGVycygpIHsgcmV0dXJuIHtcbiAgICBcInNyY1wiOiBbXCJzcmNDaGFuZ2VkXCJdXG4gIH07IH1cbn07XG5JbWcuc3R5bGUgPSBpbWdDc3M7XG5cbmV4cG9ydCB7IEltZyBhcyBpb25faW1nIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=